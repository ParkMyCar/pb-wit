/// An interface for making HTTP requests.
interface http {
    use types.{waker};
    
    resource client {
        /// Make an HTTP `GET` request.
        get: func(request: request) -> response;
    }

    /// An HTTP request.
    record request {
        url: string,
        headers: list<tuple<string, string>>,
    }

    /// An HTTP response.
    resource response {
        headers: func() -> list<tuple<string, string>>;
        body: func() -> body-stream;
    }

    resource body-stream {
        poll-next: func(waker: waker) -> body-poll;
    }

    variant body-poll {
        pending,
        ready(option<list<u8>>),
    }
}
